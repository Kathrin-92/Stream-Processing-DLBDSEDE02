# to do: spark container erst starten, wenn api service läuft? wie kann ich das machen - scheduler irgendwie einbauen
# to do: cronjob anpassen
# to do: alle stations einbinden und einmal über den tag durchlaufen lassen
# to do: fix stream -- stops addings raw data to table but keeps aggregating
# to do: fix logs for stream simulation - deletion of files not correctly written down

services:
  api_service:
    container_name: api_service_container
    build:
      context: ./api_service
      dockerfile: Dockerfile
    volumes:
      - ./api_service/sensor_data/batch_data:/usr/src/api_service/sensor_data/batch_data
      - ./api_service/sensor_data/metadata:/usr/src/api_service/sensor_data/metadata
      - ./api_service/sensor_data/stream_data:/usr/src/api_service/sensor_data/stream_data
      - api-service-logs:/usr/src/api_service
    networks:
      - app_network
    restart: on-failure
    depends_on:
      - postgres

  postgres:
    container_name: postgres_db
    build:
      context: ./database_service
      dockerfile: Dockerfile
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: airquality_sensor_data
    ports:
      - "5432:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data
      - postgres_db:/usr/src/database_service/db_setup.sql:/docker-entrypoint-initdb.d/db_setup.sql
    networks:
      - app_network
    restart: always

  spark-streaming:
    container_name: spark_stream
    build:
      context: ./spark_processing
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - api_service
    ports:
      - "7077:7077"   # Spark master port
      - "8080:8080"   # Spark UI port
      - "4040:4040"   # Job Web UI port
    volumes:
      - ./api_service/sensor_data/stream_data:/api_service/sensor_data/stream_data
      - stream-process-logs:/usr/src/spark_processing
    networks:
        - app_network
    restart: always

volumes:
  postgres_db:
    driver: local
  stream-process-logs:
    driver: local
  api-service-logs:
    driver: local

networks:
  app_network:
    driver: bridge